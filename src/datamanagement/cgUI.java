package datamanagement;
import javax.swing.*;


import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import java.awt.Font;
import java.awt.Color;
import java.awt.event.*;

public class cgUI extends JFrame implements IUnitLister,
		IStudentLister {
	private cgCTL ctl;
	private DefaultComboBoxModel<String> unitComboBoxModel_;
	private DefaultComboBoxModel<String> studentComboBoxModel_;
	float f1;
	float f2;
	float f3;
	Integer sid;
	private JButton buttonChange;
	private JButton buttonCheckGrade;
	private JButton buttonSave;
	private JComboBox<String> comboBoxUnit;
	private JComboBox<String> comboBoxStudent;
	private JLabel labelTitle;
	private JLabel labelAsg1;
	private JLabel labelAsg2;
	private JLabel labelExam;
	private JLabel labelGrade;
	private JLabel labelError;
	private JPanel panelUnit;
	private JPanel panelStudent;
	private JPanel panelMarks;
	private JPanel panelGrade;
	private JTextField textFieldAsg1;
	private JTextField textFieldAsg2;
	private JTextField textFieldExam;
	
	public cgUI(cgCTL ctl) {
		this.ctl = ctl;
		unitComboBoxModel_ = new DefaultComboBoxModel<String>(new String[0]);
		studentComboBoxModel_ = new DefaultComboBoxModel<String>(new String[0]);
		initComponents();
		comboBoxUnit.setModel(unitComboBoxModel_);
		comboBoxStudent.setModel(studentComboBoxModel_);
		labelError.setText("");
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		labelTitle = new JLabel();
		panelUnit = new JPanel();
		comboBoxUnit = new JComboBox<String>();
		panelStudent = new JPanel();
		comboBoxStudent = new JComboBox<String>();
		panelMarks = new JPanel();
		labelAsg1 = new JLabel();
		labelAsg2 = new JLabel();
		labelExam = new JLabel();
		textFieldAsg1 = new JTextField();
		textFieldAsg2 = new JTextField();
		textFieldExam = new JTextField();
		buttonChange = new JButton();
		panelGrade = new JPanel();
		labelGrade = new JLabel();

		setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

		labelTitle.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
		labelTitle.setText("Check Grade UI");

		panelUnit.setBorder(BorderFactory.createTitledBorder("Unit"));

		comboBoxUnit.setModel(unitComboBoxModel_);
		
		comboBoxUnit.addItemListener(new ItemListener() {
			public void itemStateChanged(ItemEvent event) {
				selectedUnitChanged(event);
			}
		});
		
		GroupLayout groupUnit = new GroupLayout(panelUnit);

		panelUnit.setLayout(groupUnit);
		
		groupUnit.setHorizontalGroup(groupUnit.createParallelGroup(
				GroupLayout.Alignment.LEADING).addGroup(
						groupUnit
						.createSequentialGroup()
						.addContainerGap()
						.addComponent(comboBoxUnit,
								GroupLayout.PREFERRED_SIZE, 185,
								GroupLayout.PREFERRED_SIZE)
						.addContainerGap(GroupLayout.DEFAULT_SIZE,
								Short.MAX_VALUE)));
		groupUnit.setVerticalGroup(groupUnit.createParallelGroup(
				GroupLayout.Alignment.LEADING).addGroup(
						groupUnit
						.createSequentialGroup()
						.addComponent(comboBoxUnit,
								GroupLayout.PREFERRED_SIZE,
								GroupLayout.DEFAULT_SIZE,
								GroupLayout.PREFERRED_SIZE)
						.addContainerGap(GroupLayout.DEFAULT_SIZE,
								Short.MAX_VALUE)));

		panelStudent.setBorder(BorderFactory.createTitledBorder("Student"));

		comboBoxStudent.setModel(studentComboBoxModel_);
		comboBoxStudent.addItemListener(new ItemListener() {
			public void itemStateChanged(ItemEvent evt) {
				selectedStudentChanged(evt);
			}
		});

		GroupLayout groupStudent = new GroupLayout(panelStudent);
		
		panelStudent.setLayout(groupStudent);
		groupStudent.setHorizontalGroup(groupStudent.createParallelGroup(
				GroupLayout.Alignment.LEADING).addGroup(
				groupStudent
						.createSequentialGroup()
						.addContainerGap()
						.addComponent(comboBoxStudent,
								GroupLayout.PREFERRED_SIZE, 185,
								GroupLayout.PREFERRED_SIZE)
						.addContainerGap(GroupLayout.DEFAULT_SIZE,
								Short.MAX_VALUE)));
		groupStudent.setVerticalGroup(groupStudent.createParallelGroup(
				GroupLayout.Alignment.LEADING).addGroup(
				groupStudent
						.createSequentialGroup()
						.addComponent(comboBoxStudent,
								GroupLayout.PREFERRED_SIZE,
								GroupLayout.DEFAULT_SIZE,
								GroupLayout.PREFERRED_SIZE)
						.addContainerGap(GroupLayout.DEFAULT_SIZE,
								Short.MAX_VALUE)));

		panelMarks.setBorder(BorderFactory.createTitledBorder("Marks"));

		labelAsg1.setText("Asg1:");

		labelAsg2.setText("Asg2:");

		labelExam.setText("Exam:");

		textFieldAsg1.setEditable(false);
		textFieldAsg1.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyTyped(java.awt.event.KeyEvent evt) {
				jTextFieldKeyTyped(evt);
			}
		});

		textFieldAsg2.setEditable(false);
		textFieldAsg2.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyTyped(java.awt.event.KeyEvent evt) {
				jTextFieldKeyTyped(evt);
			}
		});

		textFieldExam.setEditable(false);
		textFieldExam.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyTyped(java.awt.event.KeyEvent evt) {
				jTextFieldKeyTyped(evt);
			}
		});

		buttonChange.setText("Change");
		buttonChange.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				changePressed(evt);
			}
		});
		
		buttonCheckGrade = new JButton();
		buttonCheckGrade.setText("Check Grade");
		buttonCheckGrade.setActionCommand("checkGrade");
		buttonCheckGrade.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				checkGradePressed(evt);
			}
		});

		GroupLayout groupMarks = new GroupLayout(panelMarks);
		groupMarks.setHorizontalGroup(
			groupMarks.createParallelGroup(Alignment.LEADING)
				.addGroup(groupMarks.createSequentialGroup()
					.addGroup(groupMarks.createParallelGroup(Alignment.LEADING)
						.addGroup(groupMarks.createSequentialGroup()
							.addContainerGap()
							.addComponent(labelAsg1)
							.addPreferredGap(ComponentPlacement.RELATED)
							.addComponent(textFieldAsg1, GroupLayout.PREFERRED_SIZE, 59, GroupLayout.PREFERRED_SIZE)
							.addGap(18)
							.addComponent(labelAsg2))
						.addGroup(groupMarks.createSequentialGroup()
							.addGap(85)
							.addComponent(buttonChange, GroupLayout.PREFERRED_SIZE, 84, GroupLayout.PREFERRED_SIZE)))
					.addGap(18)
					.addGroup(groupMarks.createParallelGroup(Alignment.TRAILING)
						.addGroup(groupMarks.createSequentialGroup()
							.addComponent(textFieldAsg2, GroupLayout.PREFERRED_SIZE, 59, GroupLayout.PREFERRED_SIZE)
							.addGap(18)
							.addComponent(labelExam))
						.addComponent(buttonCheckGrade))
					.addGap(18)
					.addComponent(textFieldExam, GroupLayout.PREFERRED_SIZE, 59, GroupLayout.PREFERRED_SIZE)
					.addGap(15))
		);
		groupMarks.setVerticalGroup(
			groupMarks.createParallelGroup(Alignment.LEADING)
				.addGroup(groupMarks.createSequentialGroup()
					.addGroup(groupMarks.createParallelGroup(Alignment.BASELINE)
						.addComponent(labelAsg1)
						.addComponent(textFieldAsg1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(labelAsg2)
						.addComponent(textFieldAsg2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(labelExam)
						.addComponent(textFieldExam, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addPreferredGap(ComponentPlacement.UNRELATED)
					.addGroup(groupMarks.createParallelGroup(Alignment.BASELINE)
						.addComponent(buttonChange)
						.addComponent(buttonCheckGrade))
					.addContainerGap())
		);
		panelMarks.setLayout(groupMarks);

		panelGrade.setBorder(BorderFactory.createTitledBorder("Grade"));

		labelGrade.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
		labelGrade.setForeground(new java.awt.Color(255, 0, 0));
		labelGrade.setHorizontalAlignment(SwingConstants.CENTER);
		labelGrade.setText("grade");

		GroupLayout groupGrade = new GroupLayout(panelGrade);
		panelGrade.setLayout(groupGrade);
		groupGrade.setHorizontalGroup(groupGrade.createParallelGroup(
				GroupLayout.Alignment.LEADING).addComponent(
				labelGrade, GroupLayout.Alignment.TRAILING,
				GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE));
		groupGrade.setVerticalGroup(groupGrade.createParallelGroup(
				GroupLayout.Alignment.LEADING).addGroup(
				groupGrade.createSequentialGroup().addGap(34, 34, 34)
						.addComponent(labelGrade)
						.addContainerGap(43, Short.MAX_VALUE)));
		
		labelError = new JLabel();
		labelError.setText("Error message");
		labelError.setForeground(Color.RED);
		labelError.setFont(new Font("Tahoma", Font.PLAIN, 12));
		buttonSave = new JButton();
		buttonSave.setText("Save");
		buttonSave.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});

		GroupLayout layout = new GroupLayout(getContentPane());
		layout.setHorizontalGroup(
			layout.createParallelGroup(Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
					.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addGroup(layout.createSequentialGroup()
							.addContainerGap()
							.addComponent(labelError, GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
						.addGroup(layout.createSequentialGroup()
							.addContainerGap()
							.addGroup(layout.createParallelGroup(Alignment.LEADING, false)
								.addComponent(panelMarks, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addGroup(layout.createSequentialGroup()
									.addGroup(layout.createParallelGroup(Alignment.LEADING)
										.addComponent(panelUnit, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
										.addComponent(panelStudent, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
									.addGap(18)
									.addComponent(panelGrade, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))))
						.addGroup(layout.createSequentialGroup()
							.addGap(157)
							.addComponent(labelTitle))
						.addGroup(layout.createSequentialGroup()
							.addGap(165)
							.addComponent(buttonSave, GroupLayout.PREFERRED_SIZE, 86, GroupLayout.PREFERRED_SIZE)))
					.addContainerGap())
		);
		layout.setVerticalGroup(
			layout.createParallelGroup(Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
					.addContainerGap()
					.addComponent(labelTitle)
					.addGap(13)
					.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addGroup(layout.createSequentialGroup()
							.addComponent(panelUnit, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
							.addPreferredGap(ComponentPlacement.RELATED)
							.addComponent(panelStudent, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
						.addComponent(panelGrade, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
					.addComponent(panelMarks, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
					.addPreferredGap(ComponentPlacement.RELATED)
					.addComponent(buttonSave)
					.addGap(11)
					.addComponent(labelError, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE)
					.addContainerGap())
		);
		getContentPane().setLayout(layout);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void selectedUnitChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_jComboBox1ItemStateChanged
		String cU = (String) comboBoxUnit.getSelectedItem();
		Refresh3();
		clearStudents();
		if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
			if (cU.equals((String) comboBoxUnit.getItemAt(0))) {
				cU = "NONE";
			}
			ctl.unitSelected(cU);
		}
	}// GEN-LAST:event_jComboBox1ItemStateChanged

	private void selectedStudentChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_jComboBox2ItemStateChanged
		Refresh3();
		String cS = (String) comboBoxStudent.getSelectedItem();
		if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
			if (cS.equals((String) comboBoxStudent.getItemAt(0))) {
				sid = new Integer(0);
				ctl.studentSelected(sid);
			} else {
				sid = new Integer(cS.split("\\s")[0]);
			}
			ctl.studentSelected(sid);
		}
	}// GEN-LAST:event_jComboBox2ItemStateChanged

	private void checkGradePressed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton3ActionPerformed
		f1 = new Float(textFieldAsg1.getText()).floatValue();
		f2 = new Float(textFieldAsg2.getText()).floatValue();
		f3 = new Float(textFieldExam.getText()).floatValue();
		//lblErrMsg.setText("");
		try {
			String s = ctl.checkGrade(f1, f2, f3);
			labelGrade.setText(s);
		}
		catch (RuntimeException re) {
			labelError.setText(re.getMessage());
		}
	}// GEN-LAST:event_jButton3ActionPerformed

	private void changePressed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
		ctl.enableChangeMarks();
		labelGrade.setText("");
		//lblErrMsg.setText("");
	}// GEN-LAST:event_jButton1ActionPerformed

	private void jTextFieldKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_jTextField1KeyTyped
		labelGrade.setText("");
		labelError.setText("");
	}// GEN-LAST:event_jTextField1KeyTyped

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton2ActionPerformed
		float asg1 = new Float(textFieldAsg1.getText()).floatValue();
		float asg2 = new Float(textFieldAsg2.getText()).floatValue();
		float exam = new Float(textFieldExam.getText()).floatValue();
		labelError.setText("");
		try {
			ctl.saveGrade(asg1, asg2, exam);
			//jButton3ActionPerformed(null);
		}
		catch (RuntimeException re) {
			labelError.setText(re.getMessage());
		}
	}// GEN-LAST:event_jButton2ActionPerformed

	public void clearUnits() {
		unitComboBoxModel_.removeAllElements();
		unitComboBoxModel_.addElement("<none selected>");
		clearStudents();
	}

	public void addUnit(IUnit u) {
		unitComboBoxModel_.addElement(u.getUnitCode());
	}

	public void setState1(boolean b) {
		comboBoxUnit.setEnabled(b);
		labelError.setText("");
	}

	public void clearStudents() {
		studentComboBoxModel_.removeAllElements();
		studentComboBoxModel_.addElement("<none selected>");
	}

	public void addStudent(IStudent student) {
		studentComboBoxModel_.addElement(student.getID().toString() + " : " + student.getFirstName() + " " + student.getLastName());
	}

	public void setState2(boolean b) {
		comboBoxStudent.setEnabled(b);
		labelError.setText("");
	}

	public void setRecord(IStudentUnitRecord record) {
		textFieldAsg1.setText(new Float(record.getAsg1()).toString());
		textFieldAsg2.setText(new Float(record.getAsg2()).toString());
		textFieldExam.setText(new Float(record.getExam()).toString());
		labelGrade.setText("");
	}

	public void Refresh3() {
		textFieldAsg1.setText("");
		textFieldAsg2.setText("");
		textFieldExam.setText("");
		labelGrade.setText("");
		labelError.setText("");
		textFieldAsg1.setEditable(false);
		textFieldAsg2.setEditable(false);
		textFieldExam.setEditable(false);
	}

	public void setState3(boolean b) {
		buttonCheckGrade.setEnabled(b);
	}

	public void setState4(boolean b) {
		buttonChange.setEnabled(b);
		// gradeLB.setText("");
	}

	public void setState5(boolean b) {
		textFieldAsg1.setEditable(b);
		textFieldAsg2.setEditable(b);
		textFieldExam.setEditable(b);
	}

	public void setState6(boolean b) {
		buttonSave.setEnabled(b);
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables

}
